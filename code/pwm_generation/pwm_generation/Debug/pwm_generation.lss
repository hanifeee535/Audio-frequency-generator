
pwm_generation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000110  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000bc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000110  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000140  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006b9  00000000  00000000  000001b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000619  00000000  00000000  00000869  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000022b  00000000  00000000  00000e82  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  000010b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a7  00000000  00000000  000010f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  0000149b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 57 00 	call	0xae	; 0xae <main>
  78:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <set_up_environment>:

#include <avr/io.h>

void set_up_environment(){
	//data direction register
	DDRD &= ~(1<<2);  //setting port d pin 2 as input
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	8b 7f       	andi	r24, 0xFB	; 251
  84:	8a b9       	out	0x0a, r24	; 10
	DDRB  |= (1<<0); //setting port b pin 0 as output
  86:	84 b1       	in	r24, 0x04	; 4
  88:	81 60       	ori	r24, 0x01	; 1
  8a:	84 b9       	out	0x04, r24	; 4
	
	PORTB |= (1<<0); //putting port B as high initially
  8c:	85 b1       	in	r24, 0x05	; 5
  8e:	81 60       	ori	r24, 0x01	; 1
  90:	85 b9       	out	0x05, r24	; 5
	PORTD |= (1<<2); //enabling internal pull up resistor
  92:	8b b1       	in	r24, 0x0b	; 11
  94:	84 60       	ori	r24, 0x04	; 4
  96:	8b b9       	out	0x0b, r24	; 11
  98:	08 95       	ret

0000009a <Pwm_generation>:


//1khz pwm generation
void Pwm_generation (){
	//TCNT0 = 0x00;
	DDRD |= (1<<6); 
  9a:	8a b1       	in	r24, 0x0a	; 10
  9c:	80 64       	ori	r24, 0x40	; 64
  9e:	8a b9       	out	0x0a, r24	; 10
	OCR0A = 100; //50 percent duty cycle
  a0:	84 e6       	ldi	r24, 0x64	; 100
  a2:	87 bd       	out	0x27, r24	; 39
	TCCR0A = 0x83; //setting fast pwm on non inverting mode
  a4:	83 e8       	ldi	r24, 0x83	; 131
  a6:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0x03; //setting 64 prescaler
  a8:	83 e0       	ldi	r24, 0x03	; 3
  aa:	85 bd       	out	0x25, r24	; 37
  ac:	08 95       	ret

000000ae <main>:



int main(void)
{
	set_up_environment();
  ae:	0e 94 40 00 	call	0x80	; 0x80 <set_up_environment>
	Pwm_generation();
  b2:	0e 94 4d 00 	call	0x9a	; 0x9a <Pwm_generation>
  b6:	ff cf       	rjmp	.-2      	; 0xb6 <main+0x8>

000000b8 <_exit>:
  b8:	f8 94       	cli

000000ba <__stop_program>:
  ba:	ff cf       	rjmp	.-2      	; 0xba <__stop_program>
